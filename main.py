import os
import time
import logging
import schedule
import instaloader
import threading
import http.server
import socketserver
from datetime import datetime

from telegram import Bot
from telegram.error import TelegramError

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è ===
logging.basicConfig(
    level=logging.INFO,
    format='[%(asctime)s] %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(),
        logging.FileHandler('bot.log')
    ]
)
logger = logging.getLogger(__name__)

# === Keep-alive —Å–µ—Ä–≤–µ—Ä ===
def keep_alive():
    PORT = 8080
    Handler = http.server.SimpleHTTPRequestHandler
    with socketserver.TCPServer(("", PORT), Handler) as httpd:
        logger.info(f"üåê Keep-alive —Å–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
        httpd.serve_forever()

threading.Thread(target=keep_alive, daemon=True).start()

# === –ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ ===
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
INSTAGRAM_TARGET = os.getenv("INSTAGRAM_TARGET_USERNAME")
INSTAGRAM_USERNAME = os.getenv("INSTAGRAM_USERNAME")
INSTAGRAM_PASSWORD = os.getenv("INSTAGRAM_PASSWORD")
INSTAGRAM_SESSIONID = os.getenv("INSTAGRAM_SESSIONID")

# === –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ ===
bot = Bot(token=TELEGRAM_TOKEN)

# === –ö–µ—à –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–æ—Å—Ç–∞ ===
CACHE_FILE = "last_post.txt"

def get_last_post():
    if os.path.exists(CACHE_FILE):
        with open(CACHE_FILE, "r") as f:
            return f.read().strip()
    return None

def save_last_post(post_id):
    with open(CACHE_FILE, "w") as f:
        f.write(str(post_id))

# === Instagram –∫–ª—ñ—î–Ω—Ç ===
def get_instagram_client():
    L = instaloader.Instaloader(
        sleep=True,
        quiet=True,
        user_agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    )
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ sessionid –∞–±–æ –ª–æ–≥—ñ–Ω/–ø–∞—Ä–æ–ª—å
    if INSTAGRAM_SESSIONID:
        try:
            L.context._session.cookies.set("sessionid", INSTAGRAM_SESSIONID, domain=".instagram.com")
            L.test_login()
            logger.info("üîë –£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥ —á–µ—Ä–µ–∑ sessionid")
            return L
        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É —á–µ—Ä–µ–∑ sessionid: {e}")
    
    if INSTAGRAM_USERNAME and INSTAGRAM_PASSWORD:
        try:
            L.login(INSTAGRAM_USERNAME, INSTAGRAM_PASSWORD)
            logger.info("üîë –£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥ —á–µ—Ä–µ–∑ –ª–æ–≥—ñ–Ω/–ø–∞—Ä–æ–ª—å")
            return L
        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É –≤ Instagram: {e}")
            raise
    
    logger.warning("‚ö†Ô∏è –ù–µ –≤–∫–∞–∑–∞–Ω–æ –æ–±–ª—ñ–∫–æ–≤—ñ –¥–∞–Ω—ñ Instagram. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –∞–Ω–æ–Ω—ñ–º–Ω–∏–π –¥–æ—Å—Ç—É–ø.")
    return L

# === –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ ===
def check_and_send_post():
    logger.info("üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–æ–≤—ñ –ø–æ—Å—Ç–∏...")
    try:
        L = get_instagram_client()
        profile = instaloader.Profile.from_username(L.context, INSTAGRAM_TARGET)
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –ø–æ—Å—Ç
        posts = profile.get_posts()
        latest_post = next(posts)
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –Ω–æ–≤–∏–π –ø–æ—Å—Ç
        last_post_id = get_last_post()
        if last_post_id == str(latest_post.shortcode):
            logger.info("‚è© –ù–æ–≤–∏—Ö –ø–æ—Å—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            return
            
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–µ–¥—ñ–∞
        post_dir = f"temp_{latest_post.shortcode}"
        os.makedirs(post_dir, exist_ok=True)
        L.download_post(latest_post, target=post_dir)
        
        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –º–µ–¥—ñ–∞—Ñ–∞–π–ª
        media_file = None
        for file in os.listdir(post_dir):
            if file.endswith(('.jpg', '.jpeg', '.png', '.mp4')):
                media_file = os.path.join(post_dir, file)
                break
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ Telegram
        caption = f"\n{latest_post.caption or ''}"
        
        if media_file:
            with open(media_file, 'rb') as media:
                if media_file.endswith(('.mp4', '.mov')):
                    bot.send_video(chat_id=CHAT_ID, video=media, caption=caption)
                else:
                    bot.send_photo(chat_id=CHAT_ID, photo=media, caption=caption)
            logger.info(f"‚úÖ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–∏–π –ø–æ—Å—Ç: {latest_post.shortcode}")
        else:
            post_url = f"https://instagram.com/p/{latest_post.shortcode}"
            bot.send_message(chat_id=CHAT_ID, text=f"{caption}\n\n{post_url}")
            logger.warning("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –º–µ–¥—ñ–∞, –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è")
        
        # –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à
        save_last_post(latest_post.shortcode)
        
        # –ü—Ä–∏–±–∏—Ä–∞—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏
        for file in os.listdir(post_dir):
            os.remove(os.path.join(post_dir, file))
        os.rmdir(post_dir)
        
    except instaloader.exceptions.QueryReturnedBadRequestException as e:
        logger.error(f"üö´ –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É –¥–æ Instagram: {e}")
        time.sleep(300)  # –ó–∞—Ç—Ä–∏–º–∫–∞ –ø—Ä–∏ –æ–±–º–µ–∂–µ–Ω–Ω—ñ –∑–∞–ø–∏—Ç—ñ–≤
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {str(e)}", exc_info=True)

# === –†–æ–∑–∫–ª–∞–¥ ===
schedule.every(30).minutes.do(check_and_send_post)

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...")
    check_and_send_post()  # –ü–µ—Ä—à–∏–π –∑–∞–ø—É—Å–∫
    
    while True:
        try:
            schedule.run_pending()
            time.sleep(10)
        except KeyboardInterrupt:
            logger.info("üõë –ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ")
            break
        except Exception as e:
            logger.error(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É —Ü–∏–∫–ª—ñ: {e}")
            time.sleep(60)
